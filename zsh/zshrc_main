# DO NOT EDIT THIS FILE. IT IS MAINTAINED BY ANSIBLE.
#
# $reset_color

#source /root/zgen/zgen.zsh
source ~/.zgen/zgen.zsh

if ! zgen saved; then
	echo "_______________________[Creating a zgen save]"
	zgen oh-my-zsh
	###zgen oh-my-zsh plugins/adb
	# zgen oh-my-zsh plugins/ant
	# zgen oh-my-zsh plugins/apache2-macports
	###zgen oh-my-zsh plugins/archlinux
	# zgen oh-my-zsh plugins/atom
	# zgen oh-my-zsh plugins/autoenv
	zgen oh-my-zsh plugins/autojump
	# zgen oh-my-zsh plugins/autopep8
	# zgen oh-my-zsh plugins/aws
	zgen oh-my-zsh plugins/battery
	# zgen oh-my-zsh plugins/bbedit
	# zgen oh-my-zsh plugins/bgnotify
	# zgen oh-my-zsh plugins/boot2docker
	# zgen oh-my-zsh plugins/bower
	###zgen oh-my-zsh plugins/brew
	###zgen oh-my-zsh plugins/brew-cask
	###zgen oh-my-zsh plugins/bundler
	# zgen oh-my-zsh plugins/bwana
	# zgen oh-my-zsh plugins/cabal
	# zgen oh-my-zsh plugins/cake
	# zgen oh-my-zsh plugins/cakephp3
	# zgen oh-my-zsh plugins/capistrano
	# zgen oh-my-zsh plugins/cask
	# zgen oh-my-zsh plugins/catimg
	# zgen oh-my-zsh plugins/celery
	# zgen oh-my-zsh plugins/chruby
	# zgen oh-my-zsh plugins/chucknorris
	# zgen oh-my-zsh plugins/cloudapp
	# zgen oh-my-zsh plugins/coffee
	# zgen oh-my-zsh plugins/colemak
	# zgen oh-my-zsh plugins/colored-man
	zgen oh-my-zsh plugins/colorize
	zgen oh-my-zsh plugins/command-not-found
	zgen oh-my-zsh plugins/common-aliases
	zgen oh-my-zsh plugins/compleat
	# zgen oh-my-zsh plugins/composer
	# zgen oh-my-zsh plugins/copydir
	# zgen oh-my-zsh plugins/copyfile
	zgen oh-my-zsh plugins/cp
	# zgen oh-my-zsh plugins/cpanm
	zgen oh-my-zsh plugins/debian
	zgen oh-my-zsh plugins/dircycle
	zgen oh-my-zsh plugins/dirhistory
	zgen oh-my-zsh plugins/dirpersist
	# zgen oh-my-zsh plugins/django
	# zgen oh-my-zsh plugins/docker
	# zgen oh-my-zsh plugins/docker-compose
	###zgen oh-my-zsh plugins/emacs
	# zgen oh-my-zsh plugins/ember-cli
	# zgen oh-my-zsh plugins/emoji-clock
	# zgen oh-my-zsh plugins/encode64
	zgen oh-my-zsh plugins/extract
	# zgen oh-my-zsh plugins/fabric
	zgen oh-my-zsh plugins/fasd
	# zgen oh-my-zsh plugins/fastfile
	# zgen oh-my-zsh plugins/fbterm
	# zgen oh-my-zsh plugins/forklift
	zgen oh-my-zsh plugins/frontend-search
	# zgen oh-my-zsh plugins/gas
	# zgen oh-my-zsh plugins/gem
	zgen oh-my-zsh plugins/git
	# zgen oh-my-zsh plugins/git-extras
	# zgen oh-my-zsh plugins/gitfast
	# zgen oh-my-zsh plugins/git-flow
	# zgen oh-my-zsh plugins/git-flow-avh
	zgen oh-my-zsh plugins/github
	# zgen oh-my-zsh plugins/git-hubflow
	# zgen oh-my-zsh plugins/gitignore
	# zgen oh-my-zsh plugins/git-prompt
	# zgen oh-my-zsh plugins/git-remote-branch
	# zgen oh-my-zsh plugins/glassfish
	zgen oh-my-zsh plugins/gnu-utils
	# zgen oh-my-zsh plugins/go
	# zgen oh-my-zsh plugins/golang
	# zgen oh-my-zsh plugins/gpg-agent
	# zgen oh-my-zsh plugins/gradle
	# zgen oh-my-zsh plugins/grails
	# zgen oh-my-zsh plugins/grunt
	# zgen oh-my-zsh plugins/heroku
	zgen oh-my-zsh plugins/history
	zgen oh-my-zsh plugins/history-substring-search
	# zgen oh-my-zsh plugins/httpie
	zgen oh-my-zsh plugins/iwhois
	# zgen oh-my-zsh plugins/jake-node
	# zgen oh-my-zsh plugins/jhbuild
	# zgen oh-my-zsh plugins/jira
	# zgen oh-my-zsh plugins/jruby
	# zgen oh-my-zsh plugins/jsontools
	# zgen oh-my-zsh plugins/jump
	###zgen oh-my-zsh plugins/kate
	# zgen oh-my-zsh plugins/kitchen
	# zgen oh-my-zsh plugins/knife
	# zgen oh-my-zsh plugins/knife_ssh
	# zgen oh-my-zsh plugins/laravel
	# zgen oh-my-zsh plugins/laravel4
	# zgen oh-my-zsh plugins/laravel5
	# zgen oh-my-zsh plugins/last-working-dir
	# zgen oh-my-zsh plugins/lein
	# zgen oh-my-zsh plugins/lighthouse
	# zgen oh-my-zsh plugins/lol
	# zgen oh-my-zsh plugins/macports
	# zgen oh-my-zsh plugins/marked2
	# zgen oh-my-zsh plugins/mercurial
	# zgen oh-my-zsh plugins/meteor
	# zgen oh-my-zsh plugins/mix
	# zgen oh-my-zsh plugins/mix-fast
	zgen oh-my-zsh plugins/mosh
	# zgen oh-my-zsh plugins/mvn
	# zgen oh-my-zsh plugins/mysql-macports
	# zgen oh-my-zsh plugins/nanoc
	zgen oh-my-zsh plugins/nmap
	###zgen oh-my-zsh plugins/node
	# zgen oh-my-zsh plugins/npm
	# zgen oh-my-zsh plugins/nvm
	# zgen oh-my-zsh plugins/nyan
	# zgen oh-my-zsh plugins/osx
	# zgen oh-my-zsh plugins/pass
	# zgen oh-my-zsh plugins/paver
	# zgen oh-my-zsh plugins/pep8
	# zgen oh-my-zsh plugins/per-directory-history
	###zgen oh-my-zsh plugins/perl
	# zgen oh-my-zsh plugins/phing
	zgen oh-my-zsh plugins/pip
	# zgen oh-my-zsh plugins/pj
	# zgen oh-my-zsh plugins/pod
	# zgen oh-my-zsh plugins/postgres
	# zgen oh-my-zsh plugins/pow
	# zgen oh-my-zsh plugins/powder
	# zgen oh-my-zsh plugins/powify
	zgen oh-my-zsh plugins/profiles
	# zgen oh-my-zsh plugins/pyenv
	# zgen oh-my-zsh plugins/pylint
	zgen oh-my-zsh plugins/python
	# zgen oh-my-zsh plugins/rails
	# zgen oh-my-zsh plugins/rake
	# zgen oh-my-zsh plugins/rake-fast
	# zgen oh-my-zsh plugins/rand-quote
	# zgen oh-my-zsh plugins/rbenv
	# zgen oh-my-zsh plugins/rbfu
	# zgen oh-my-zsh plugins/rebar
	# zgen oh-my-zsh plugins/redis-cli
	# zgen oh-my-zsh plugins/repo
	zgen oh-my-zsh plugins/rsync
	# zgen oh-my-zsh plugins/ruby
	zgen oh-my-zsh plugins/rust
	zgen oh-my-zsh plugins/rustup
	# zgen oh-my-zsh plugins/rvm
	# zgen oh-my-zsh plugins/safe-paste
	# zgen oh-my-zsh plugins/sbt
	# zgen oh-my-zsh plugins/scala
	# zgen oh-my-zsh plugins/scd
	###zgen oh-my-zsh plugins/screen
	# zgen oh-my-zsh plugins/sfffe
	# zgen oh-my-zsh plugins/singlechar
	# zgen oh-my-zsh plugins/sprunge
	###zgen oh-my-zsh plugins/ssh-agent
	###zgen oh-my-zsh plugins/sublime
	# zgen oh-my-zsh plugins/sudo
	# zgen oh-my-zsh plugins/supervisor
	# zgen oh-my-zsh plugins/suse
	# zgen oh-my-zsh plugins/svn
	# zgen oh-my-zsh plugins/svn-fast-info
	# zgen oh-my-zsh plugins/symfony
	# zgen oh-my-zsh plugins/symfony2
	zgen oh-my-zsh plugins/systemadmin
	###zgen oh-my-zsh plugins/systemd
	# zgen oh-my-zsh plugins/taskwarrior
	# zgen oh-my-zsh plugins/terminalapp
	# zgen oh-my-zsh plugins/terminitor
	# zgen oh-my-zsh plugins/textastic
	# zgen oh-my-zsh plugins/textmate
	zgen oh-my-zsh plugins/themes
	# zgen oh-my-zsh plugins/thor
	zgen oh-my-zsh plugins/tig
	zgen oh-my-zsh plugins/tmux
	# zgen oh-my-zsh plugins/tmuxinator
	# zgen oh-my-zsh plugins/torrent
	# zgen oh-my-zsh plugins/tugboat
	###zgen oh-my-zsh plugins/ubuntu
	zgen oh-my-zsh plugins/urltools
	# zgen oh-my-zsh plugins/vagrant
	zgen oh-my-zsh plugins/vim-interaction
	# zgen oh-my-zsh plugins/vi-mode
	zgen oh-my-zsh plugins/virtualenv
	# zgen oh-my-zsh plugins/virtualenvwrapper
	# zgen oh-my-zsh plugins/vundle
	zgen oh-my-zsh plugins/wakeonlan
	# zgen oh-my-zsh plugins/wd
	# zgen oh-my-zsh plugins/web-search
	# zgen oh-my-zsh plugins/wp-cli
	# zgen oh-my-zsh plugins/xcode
	# zgen oh-my-zsh plugins/yii
	# zgen oh-my-zsh plugins/yii2
	# zgen oh-my-zsh plugins/yum
	# zgen oh-my-zsh plugins/z
	# zgen oh-my-zsh plugins/zeus
	# zgen oh-my-zsh plugins/zsh_reload

	# zgen load psyrendust/alf
	zgen load arialdomartini/oh-my-git
	# zgen load arialdomartini/oh-my-git-themes oppa-lana-style.zsh-theme
	zgen load hchbaw/list-colors.zsh
	zgen load sorin-ionescu/prezto
	zgen load thrig/zsh-compdef
	zgen load zsh-users/zsh-completions
	zgen load zsh-users/zsh-completions src
	zgen load http://git.code.sf.net/p/zsh/code Completion/Linux/Command 
	zgen load Vifon/deer
	zgen load joel-porquet/zsh-dircolors-solarized
	zgen load zsh-users/zaw
	zgen load clvv/fasd
	#zgen load b4b4r07/enhancd
	zgen load psprint/zsh-navigation-tools
	
	zgen load zsh-users/zsh-syntax-highlighting
	zgen load trapd00r/zsh-syntax-highlighting-filetypes
	zgen oh-my-zsh plugins/zsh-syntax-highlighting
	
	zgen load zsh-users/zsh-history-substring-search
	# zgen load unixorn/zsh-starter-kit	# login
# 	zgen loadall <<EOPLUGINS
# 		zsh-users/zsh-history-substring-search
# EOPLUGINS
	zgen load tarruda/zsh-autosuggestions	# must last
	zle-line-init() {zle autosuggest-start}; zle -N zle-line-init	# autosuggestions
	ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
	
        echo "saving"
	zgen save
	# zgen update
fi

# ______________________________________________
cGrn="190"
cCyn="122"
# # zgen selfupdate
# # setopt correctall
setopt auto_resume
setopt autocd
setopt chase_links	 # resolve symlinks
setopt completeinword
setopt extendedglob
setopt interactivecomments
unsetopt caseglob

# bindkey "^[[A" history-search-backward
# bindkey "^[[B" history-search-forward
cFg="2;38;5;"
# %d	actual text
infoBg=$BG[234];	infoFg=$FG[244];
errBg=$BG[052];		errFg=$FG[160]
zstyle ':completion:::::' completer _complete _approximate
zstyle ':completion:*:approximate:*' max-errors 2

zstyle ':completion:*' format "${infoBg}${infoFg}- [%d]${reset_color}"
# ':completion:function:completer:command:argument:tag'
zstyle ':completion:*' auto-description "$FG[240]specify: %d"
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' group-name ''
# # zstyle ':completion:*' list-colors ''
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(*)=='${cFg}${cGrn}'='$cFg'239}:${(s.:.)LS_COLORS}")';
zstyle ':completion:*:aliases' list-colors '=*='$cFg'072'
zstyle ':completion:*:options' list-colors '=(-- *)='$cFg'239'
# zstyle ':completion:*:options' list-colors '=^(-- *)=34'

# zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt "${infoBg}%SAt %p: TAB for more, or the character to insert%s${reset_color}"
# # zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
# zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' menu select=2 eval "$(dircolors -b)"
# zstyle ':completion:*' menu select=2 "{infoBg}${infoFg}"
# # zstyle ':completion:*' menu select=long
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
# zstyle ':completion:*' "select-prompt %SScrolling active: current selection at %p%s"
zstyle ':completion:*' "select-prompt %SScroll %p%s"
# zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
# zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*:killall:*' command 'ps -u $USER -o cmd'
zstyle ':completion:*:descriptions' format "$FG[094]xxxxxxxx%U%B%d%b%u"
zstyle ':completion:*:messages' format '%B%U---- %d%u%bxxxxxxxx'
zstyle ':completion:*:warnings' format "${errBg}${errFg}%BNo matches for:${reset_color} $FG[052]%d%b${reset_color}"

zstyle ':filter-select:highlight' matched fg=${cGrn}
zstyle ':filter-select:highlight' selected fg=black,bg=${cGrn}
zstyle ':filter-select:highlight' title fg=red
zstyle ':filter-select:highlight' marked fg=red
zstyle ':filter-select' case-insensitive yes
zstyle ':filter-select' extended-search yes
zstyle ':filter-select' rotate-list yes
# # zstyle ":completion:*:commands" rehash 1

# # ZSH=$HOME/.oh-my-zsh
# # source $ZSH/templates/zshrc.zsh-template


# # ____________________________________________________________________________________
# ZSH_THEME="miloshadzic"		# robbyrussell
# # alias zshconfig="mate ~/.zshrc"
# # alias ohmyzsh="mate ~/.oh-my-zsh"

# # CASE_SENSITIVE="true"			# Set to this to use case-sensitive completion
# DISABLE_AUTO_UPDATE="true"		# Comment this out to disable bi-weekly auto-update checks
# # export UPDATE_ZSH_DAYS=13		# Uncomment to change how often before auto-updates occur? (in days)
# # DISABLE_LS_COLORS="true"
# # DISABLE_AUTO_TITLE="true"		# disable autosetting terminal title.
# # DISABLE_CORRECTION="true"		# disable command autocorrection
# COMPLETION_WAITING_DOTS="true"	# red dots to be displayed while waiting for completion

# # disable marking untracked files under
# # VCS as dirty. This makes repository status check for large repositories much, much faster.
# # DISABLE_UNTRACKED_FILES_DIRTY="true"

# # plugins=(git)
# # plugins=(tmux colored-man colorize cp extract github nanoc perl python ssh-agent sublime tmux)
# plugins=(
# 	brew
# 	docker
# 	extract
# 	git
# 	history-substring-search
# 	python
# 	rvm
# 	sublime
# 	tmux
# 	zsh-syntax-highlighting
# 	rails
# 	ruby
# 	archlinux
# 	colorize
# 	ssh-agent
# 	nanoc
# 	perl
# 	cp
# 	github
# 	colored-man
# 	)
# # plugins=()

#fpath=(/root/.zgen/http:/git.code.sf.net/p/zsh/code-master/Completion/Linux/Command $fpath)
fpath=(/home/{{ user }}/.zgen/http:/git.code.sf.net/p/zsh/code-master/Completion/Linux/Command $fpath)

# . /root/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
# # ______________________________________________[powerline]
# # function powerline_precmd() {
# # 	export PS1="$(/root/powerline-shell.py $? --shell zsh 2> /dev/null)"
# # }
# # function install_powerline_precmd() {
# # 	for s in "${precmd_functions[@]}"; do
# # 		if [ "$s" = "powerline_precmd" ]; then
# # 			return
# # 		fi
# # 	done
# # 	precmd_functions+=(powerline_precmd)
# # }
# # install_powerline_precmd
# # ______________________________________________
# # bind UP and DOWN arrow keys
# zmodload zsh/terminfo
# bindkey "$terminfo[kcuu1]" history-substring-search-up
# bindkey "$terminfo[kcud1]" history-substring-search-down
# bindkey '^R' history-incremental-pattern-search-backward
bindkey '^R' zaw-history
bindkey '^Q' zaw

# bindkey '^Qf' zaw-open-file
# bindkey '^Qa' zaw-applications
# bindkey '^Qc' zaw-commands
# bindkey '^Qp' zaw-process
# bindkey '^Qs' zaw-ssh-hosts
# # autoload -Uz history-beginning-search-menu
# # zle -N history-beginning-search-menu
# # bindkey '^X^X' history-beginning-search-menu

HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='bg=cyan,fg=white'
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='bg=red,fg=white,bold'
# HISTORY_SUBSTRING_SEARCH_GLOBBING_FLAGS='i'
# # ______________________________________________
# ZSH_HIGHLIGHT_HIGHLIGHTERS=(main root brackets pattern cursor)
for i in brackets main pattern ; do	# line root
	if [[ " ${ZSH_HIGHLIGHT_HIGHLIGHTERS[*]} " != *" $i "* ]]; then ZSH_HIGHLIGHT_HIGHLIGHTERS+=( $i ); fi
done

echo $plugins
ZSH_HIGHLIGHT_PATTERNS+=('ls -rf *' 'fg=white,bold,bg=red')

# ZSH_HIGHLIGHT_STYLES[alias]=fg=white,bold,underline,standout
ZSH_HIGHLIGHT_STYLES[alias]="fg=072"
# ZSH_HIGHLIGHT_STYLES[alias]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[assign]="fg=yellow,bold"
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[builtin]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=magenta
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=magenta,bold
ZSH_HIGHLIGHT_STYLES[function]=fg=green,bold
ZSH_HIGHLIGHT_STYLES[globbing]=fg=magenta,bold
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=009
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[path]=fg=129
ZSH_HIGHLIGHT_STYLES[precommand]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=009,standout
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=005
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=009
ZSH_HIGHLIGHT_STYLES[path_prefix]=fg=cyan
ZSH_HIGHLIGHT_STYLES[path_approx]=fg=cyan

# ZSH_HIGHLIGHT_STYLES[line]='bold'
# ZSH_HIGHLIGHT_STYLES[root]='bg=red'

# ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]='fg=yellow,bold'
# ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]='fg=234'
ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]="fg=160,bg=052"
# ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]="fg=${infoBg}"
ZSH_HIGHLIGHT_STYLES[bracket-error]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=magenta,bold'

# # ZSH_THEME_PROMPT_PATH_COLOR=$FG[214]

# # ZSH_HIGHLIGHT_STYLES[alias]=red
# # ZSH_HIGHLIGHT_STYLES[assign]=none
# # ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
# # ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
# # ZSH_HIGHLIGHT_STYLES[default]=none
# # ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
# # ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
# # ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow
# # ZSH_HIGHLIGHT_STYLES[globbing]=none
# # ZSH_HIGHLIGHT_STYLES[hashed-command]=none
# # ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
# # ZSH_HIGHLIGHT_STYLES[path]=none
# # ZSH_HIGHLIGHT_STYLES[precommand]=none
# # ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=green
# # ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
# # ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow
# # ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=red,bold

# # added by travis gem
# # [ -f /root/.travis/travis.sh ] && source /root/.travis/travis.sh

# ______________________________________________[OSO]
#. /usr/share/autojump/autojump.sh
# . /usr/share/autojump/autojump.zsh
#. ~/.doto_src/autojump/bin/autojump.zsh
#source /oso/db/xcl/oso/_FC/_opt/sh/shOpt.sh

alias zNoflwLink="unsetopt chaselinks"

alias tmux="tmux -2"
function vim_sf() {
  if { [ $# -eq 0 ]; } then
    vim `sf`
  else
    vim $@
  fi
}
#alias vim=vim_sf
alias mux=tmuxinator

#HISTFILE=/root/.zsh-histfile
HISTFILE=/home/{{ user }}/.zsh-histfile
HISTSIZE=5000
SAVEHIST=5000

fg_lgray=$FG[245]	# grey
# fg_oA=$FG[227]	# yellow
# fg_oA=$FG[190]	# green
fg_oA=$FG[214]	# orange
fg_host=$FG[091]	# cyan
#fg_oB=$FG[038]	# cyan
fg_user=$FG[237]	# cyan
#fg_host=$FG[121]	# turkis
fg_oB=$FG[237]		# grey
fg_lineStart=$FG[237]		# grey
fg_at=$FG[125] # purplisch

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then fg_oA=$FG[213]; fi	# ssh

# PROMPT='$FG[154]%~%'
# PROMPT="${fg_lgreen}%n${fg_lgray}[${fg_cyan}%~${fg_lgray}]: "
PROMPT="${fg_oB}%n${fg_oB}[${fg_oA}%~${fg_oB}]: ${fg_lgray}"
#PS2='$FG[240]> '	# sub prompt
#PS3='$FG[254]?#'	# ksh
## PS4='($FG[154]${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]} - [${SHLVL},${BASH_SUBSHELL}, $?]'
#PS4='$FG[240][%N:$FG[060]%i$FG[240]]$reset_color $FG[190]'
#


ZSH_THEME_GIT_PROMPT_PREFIX=" %{$fg[green]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY=" %{$fg[red]%}⚡"
ZSH_THEME_GIT_PROMPT_CLEAN=""

function prompt_char {
	if [ $UID -eq 0 ]; then echo "%{$fg[red]%}#%{$reset_color%}"; else echo "%{$fg_lineStart%}>%{$reset_color%}"; fi
}

PROMPT='
%(?,,%{$fg[red]%}$? %{$reset_color%})%{$fg_user%}%n%{$fg_at%}@%{$fg_host%}%m%{$reset_color%}: %{$fg_oA%}%~%{$reset_color%}$(git_prompt_info)
$(prompt_char) '
#%_

function prompt_ip {
  ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -1
}

#RPROMPT='%{$fg_lgray%}[%*]%{$reset_color%}'
#RPROMPT='%{$fg_lgray%}[$(prompt_ip)]%{$reset_color%}'

TIMEFMT="
Time: $fg[red]%E$reset_color (%P)"
TIMEFMT_D="%J  %U user %S system %P cpu %*E total"
function timed {
  local TIMEFMT=$TIMEFMT_D
  time $@
}
REPORTTIME=2

#source /home/{{ user }}/.oh-my-zsh/themes/tjkirch.zsh-theme

setopt APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt NO_HIST_BEEP
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
# setopt incappendhistory
# setopt extendedhistory
# setopt sharehistory
export ZLS_COLORS=$LS_COLORS
omg_has_action_in_progress_symbol=''     #                  
zshGit(){
	# omg_can_fast_forward_symbol=''
	# omg_detached_symbol=''
	# omg_has_adds_symbol='+'
	# omg_has_cached_deletions_symbol=''
	# omg_has_cached_modifications_symbol=''
	# omg_has_deletions_symbol='-'
	# omg_has_diverged_symbol=''					#   
	# omg_has_modifications_symbol='✎'
	# omg_has_stashes_symbol=''
	# omg_has_untracked_files_symbol='∿'			#                ?    
	# omg_is_a_git_repo_symbol=''
	# omg_is_on_a_tag_symbol=''					#   
	# omg_merge_tracking_branch_symbol=''		#  
	# omg_needs_to_merge_symbol='ᄉ'
	# omg_ready_to_commit_symbol=''				#   →
	# omg_rebase_tracking_branch_symbol=''		#   
	# omg_should_push_symbol=''				#    
	
	omg_ungit_prompt=$PS1
	omg_second_line=$PS1' • '
	omg_second_line=$PS1${FG[141]}'⎤ '
	omg_not_tracked_branch_symbol=''
	# omg_is_a_git_repo_symbol='❤'
	omg_is_a_git_repo_symbol='⏣'
	omg_has_untracked_files_symbol='∿'
	omg_has_adds_symbol='+'
	omg_has_deletions_symbol='-'
	omg_has_cached_deletions_symbol='✖'
	omg_has_modifications_symbol='✎'
	omg_has_cached_modifications_symbol='☲'
	omg_ready_to_commit_symbol='→'
	omg_is_on_a_tag_symbol='⌫'
	omg_needs_to_merge_symbol='ᄉ'
	omg_has_upstream_symbol='⇅'
	omg_detached_symbol='⚯ '
	omg_can_fast_forward_symbol='»'
	omg_has_diverged_symbol='Ⴤ'
	omg_rebase_tracking_branch_symbol='↶'
	omg_merge_tracking_branch_symbol='ᄉ'
	omg_should_push_symbol='↑'
	omg_has_stashes_symbol='★'
	# omg_display_tag_name=true
	# omg_two_lines:=false
	zgen load arialdomartini/oh-my-git-themes oppa-lana-style.zsh-theme
	# PS1="${PS1/red/green}"
	# PS1="${PS1//red/yellow/}"
	# PS1="${PS1//K\{red\}/K{214\}}"
	
	# PS1="${PS1//K\{white\}/K{214\}}"
	# PS1="${PS1//K\{white\}/K{${fg_oA}\}}"
	def="$( declare -f custom_build_prompt )"
	# def="${def//{white\}/{190\}}"
	# def="${def//{white\}/{102\}}"
	# def="${def//{red\}/{214\}}"
	# def="${def//K{red\}%F{black\}/K{214\}%F{black\}}"
	# def="${def//K{black\}%F{red\}/K{black\}%F{99\}}"
	def="${def//{red\}/{141\}}"
	def="${def//{white\}/{240\}}"
	# local black_on_red="%K{red}%F{black}"
	RPROMPT=""
	eval "$def";
	# RPROMPT=''
}
# ______________________________________________[zaw]
function zaw-src-fuzzy() {
	OLDIFS=$IFS
	IFS=$'\n'
	candidates=($(find .))
	candidates=(${(iou)candidates[@]})
	IFS=$OLDIFS
	unset OLDIFS
	# Define what kind of action can be performed on the selected item
	# first: accept-line
	# second: accept-search
	actions=("zaw-callback-execute" "zaw-callback-append-to-buffer")
	act_descriptions=("execute" "append to edit buffer")
}
zaw-register-src -n fuzzy zaw-src-fuzzy

function fuzzy-start { kill-line; zaw-fuzzy }
zle -N fuzzy-start
bindkey '^F' fuzzy-start
# ----------------------------
bindkey -M filterselect '^M' accept-search
# ______________________________________________

function exists { which $1 &> /dev/null }
# if exists percol; then					# percol, [CTRL+r]
# 	function percol_select_history() { local tac; exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }; BUFFER=$(fc -l -n 1 | eval $tac | percol --query "$LBUFFER"); CURSOR=$#BUFFER; zle -R -c; }
# 	zle -N percol_select_history; bindkey '^R' percol_select_history
# fi
function tmux_attach() {
	if [[ $1 == "" ]]; then PERCOL=percol
	else PERCOL="percol --query $1"
	fi
	sessions=$(tmux ls)
	[ $? -ne 0 ] && return
	session=$(echo $sessions | eval $PERCOL | cut -d : -f 1)
	if [[ -n "$session" ]]; then tmux att -t $session
	fi
}
autoload -U compinit
# compinit
# compinit -u
# compinit -C
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# source /root/.local/lib/python3.4/site-packages/powerline/bindings/zsh/powerline.zsh
unalias gg
if [[ ! "$PATH" == */usr/local/p/versions/python* ]]; then
  export PATH="/usr/local/p/versions/python:$PATH"
fi

if which ruby >/dev/null && which gem >/dev/null; then
    TMP_PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin"
    if [[ ! "$PATH" == *$TMP_PATH* ]]; then
      PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH"
    fi
fi
source ~/.doto_src/enhancd/init.sh
eval "$(fasd --init auto)"

if which bat > /dev/null; then
  alias cat='bat --paging=never'
fi

set bell-style none
if [[ ! "$PATH" == */home/{{ user }}/.local/bin* ]]; then
  export PATH="$PATH:/home/{{ user }}/.local/bin"
fi
if [[ ! "$PATH" == */home/{{ user }}/bin* ]]; then
  export PATH="/home/{{ user }}/bin:$PATH"
fi
if [[ ! "$PATH" == */home/{{ user }}/scripts* ]]; then
  export PATH="/home/{{ user }}/scripts:$PATH"
fi
if [[ ! "$PATH" == */home/{{ user }}/git/depot_tools* ]]; then
  export PATH="$PATH:/home/{{ user }}/git/depot_tools"
fi
export GOPATH="/home/{{ user }}/source/go"
export PATH="$PATH:/home/{{ user }}/source/go/bin"

source ~/.tmuxinator/tmuxinator.zsh
